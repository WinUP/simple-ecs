{
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint"],
  "parserOptions": {
    "project": "./tsconfig.base.json"
  },
  "extends": [
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:react/recommended"
  ],
  "env": {
    "node": true,
    "es6": true
  },
  "settings": {
    "createClass": "createReactClass",
    "pragma": "React",
    "fragment": "Fragment",
    "version": "detect"
  },
  "rules": {
    "react/display-name": "off",
    "@typescript-eslint/adjacent-overload-signatures": 1,
    "@typescript-eslint/array-type": [1, { "default": "array", "readonly": "array" }],
    "@typescript-eslint/await-thenable": 0,
    "@typescript-eslint/ban-ts-comment": 0,
    "@typescript-eslint/ban-tslint-comment": 0,
    "@typescript-eslint/ban-types": 0,
    "@typescript-eslint/class-literal-property-style": 0,
    "@typescript-eslint/consistent-type-assertions": [1, { "assertionStyle": "as", "objectLiteralTypeAssertions": "allow" }],
    "@typescript-eslint/consistent-type-definitions": [1, "interface"],
    "@typescript-eslint/explicit-function-return-type": [1, { "allowExpressions": true }],
    "@typescript-eslint/explicit-member-accessibility": [1, { "accessibility": "explicit" }],
    "@typescript-eslint/explicit-module-boundary-types": [
      1,
      {
        "allowArgumentsExplicitlyTypedAsAny": true,
        "allowDirectConstAssertionInArrowFunctions": false,
        "allowedNames": [],
        "allowHigherOrderFunctions": true,
        "allowTypedFunctionExpressions": true
      }
    ],
    "@typescript-eslint/member-delimiter-style": [
      1,
      {
        "multiline": { "delimiter": "semi", "requireLast": true },
        "singleline": { "delimiter": "semi", "requireLast": false }
      }
    ],
    "@typescript-eslint/member-ordering": [
      1,
      {
        "default": [
          // Static fields
          "public-static-field",
          "protected-static-field",
          "private-static-field",
          // Static methods
          "public-static-method",
          "protected-static-method",
          "private-static-method",
          // Fields
          "public-instance-field",
          "public-abstract-field",
          "protected-instance-field",
          "protected-abstract-field",
          "private-instance-field",
          "private-abstract-field",
          // Index signature
          "signature",
          // Constructors
          "public-constructor",
          "protected-constructor",
          "private-constructor",
          // Methods
          "public-decorated-method",
          "public-instance-method",
          "public-abstract-method",
          "protected-decorated-method",
          "protected-instance-method",
          "protected-abstract-method",
          "private-decorated-method",
          "private-instance-method",
          "private-abstract-method"
        ]
      }
    ],
    "@typescript-eslint/method-signature-style": [1, "method"],
    "@typescript-eslint/naming-convention": [
      1,
      {
        "selector": "variable",
        "leadingUnderscore": "forbid",
        "trailingUnderscore": "forbid",
        "format": ["camelCase", "UPPER_CASE", "PascalCase"]
      },
      { "selector": "function", "leadingUnderscore": "allow", "format": ["camelCase", "PascalCase"] },
      { "selector": "parameter", "leadingUnderscore": "allow", "format": ["camelCase"] },
      { "selector": "property", "leadingUnderscore": "allow", "format": ["camelCase", "UPPER_CASE"] },
      { "selector": "parameterProperty", "leadingUnderscore": "allow", "format": ["camelCase"] },
      { "selector": "method", "leadingUnderscore": "allow", "format": ["camelCase", "PascalCase"] },
      { "selector": "accessor", "leadingUnderscore": "forbid", "format": ["camelCase"] },
      { "selector": "enumMember", "leadingUnderscore": "forbid", "format": ["PascalCase"] },
      { "selector": "class", "leadingUnderscore": "forbid", "format": ["PascalCase"] },
      { "selector": "interface", "leadingUnderscore": "forbid", "format": ["PascalCase"] },
      { "selector": "typeAlias", "leadingUnderscore": "forbid", "format": ["PascalCase"] },
      { "selector": "enum", "leadingUnderscore": "forbid", "format": ["PascalCase"] },
      { "selector": "typeParameter", "leadingUnderscore": "allow", "format": ["PascalCase"] }
    ],
    "@typescript-eslint/no-base-to-string": 0,
    "@typescript-eslint/no-confusing-non-null-assertion": 2,
    "@typescript-eslint/no-dynamic-delete": 0,
    "@typescript-eslint/no-empty-interface": 1,
    "@typescript-eslint/no-explicit-any": 0,
    "@typescript-eslint/no-extra-non-null-assertion": 0,
    "@typescript-eslint/no-extraneous-class": 0,
    "@typescript-eslint/no-floating-promises": 0,
    "@typescript-eslint/no-for-in-array": 1,
    "@typescript-eslint/no-implied-eval": 2,
    "@typescript-eslint/no-inferrable-types": 0,
    "@typescript-eslint/no-invalid-void-type": 0,
    "@typescript-eslint/no-misused-new": 2,
    "@typescript-eslint/no-misused-promises": [2, { "checksVoidReturn": false }],
    "@typescript-eslint/no-namespace": 0,
    "@typescript-eslint/no-non-null-asserted-optional-chain": 2,
    "@typescript-eslint/no-non-null-assertion": 1,
    "@typescript-eslint/no-parameter-properties": 1,
    "@typescript-eslint/no-require-imports": 2,
    "@typescript-eslint/no-this-alias": 1,
    "@typescript-eslint/no-throw-literal": 2,
    "@typescript-eslint/no-type-alias": 0,
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": 1,
    "@typescript-eslint/no-unnecessary-condition": 1,
    "@typescript-eslint/no-unnecessary-qualifier": 1,
    "@typescript-eslint/no-unnecessary-type-arguments": 1,
    "@typescript-eslint/no-unnecessary-type-assertion": 1,
    "@typescript-eslint/no-unsafe-assignment": 1,
    "@typescript-eslint/no-unsafe-call": 1,
    "@typescript-eslint/no-unsafe-member-access": 1,
    "@typescript-eslint/no-unsafe-return": 1,
    "no-unused-vars": 0,
    "@typescript-eslint/no-unused-vars-experimental": 0,
    "@typescript-eslint/no-var-requires": 2,
    "@typescript-eslint/prefer-as-const": 1,
    "@typescript-eslint/prefer-enum-initializers": 0,
    "@typescript-eslint/prefer-for-of": 0,
    "@typescript-eslint/prefer-function-type": 1,
    "@typescript-eslint/prefer-includes": 1,
    "@typescript-eslint/prefer-literal-enum-member": 0,
    "@typescript-eslint/prefer-namespace-keyword": 1,
    "@typescript-eslint/prefer-nullish-coalescing": 1,
    "@typescript-eslint/prefer-optional-chain": 1,
    "@typescript-eslint/prefer-readonly": 1,
    "@typescript-eslint/prefer-readonly-parameter-types": 0,
    "@typescript-eslint/prefer-reduce-type-parameter": 1,
    "@typescript-eslint/prefer-regexp-exec": 1,
    "@typescript-eslint/prefer-string-starts-ends-with": 1,
    "@typescript-eslint/prefer-ts-expect-error": 1,
    "@typescript-eslint/promise-function-async": 0,
    "@typescript-eslint/require-array-sort-compare": 0,
    "@typescript-eslint/restrict-plus-operands": 0,
    "@typescript-eslint/restrict-template-expressions": 0,
    "@typescript-eslint/strict-boolean-expressions": [
      1,
      {
        "allowString": true,
        "allowNumber": true,
        "allowNullableObject": true,
        "allowNullableBoolean": true,
        "allowNullableString": true,
        "allowNullableNumber": true
      }
    ],
    "@typescript-eslint/switch-exhaustiveness-check": 1,
    "@typescript-eslint/triple-slash-reference": [1, { "path": "never", "types": "never", "lib": "never" }],
    "@typescript-eslint/type-annotation-spacing": 0, // 格式相关的由prettier处理
    "@typescript-eslint/typedef": [
      1,
      {
        "arrayDestructuring": false,
        "arrowParameter": false,
        "memberVariableDeclaration": true,
        "objectDestructuring": false,
        "parameter": true,
        "propertyDeclaration": true,
        "variableDeclaration": false
      }
    ],
    "@typescript-eslint/unbound-method": 0,
    "@typescript-eslint/unified-signatures": 1
  }
}
